Nous envisageons de réaliser un programme ludo-éducatif de simulation de circuits logiques combinatoires et séquentiels, dont le cahier des charges constitue le présent document.
 
Dans le cadre d'un projet informatique, le cahier des charges correspond peu ou prou à l'interface utilisateur du programme final. Nous allons donc nous attacher à décrire le plus précisément possible les différents éléments de cette interface, dans un ordre aussi séquentiel que possible, afin que le lecteur puisse imaginer ce que l'utilisateur verra sur son écran.
 
1) [optionnel] un logo / une animation lors du lancement du programme et du chargement de ses ressources.
 
2) Une page d'accueil contenant des liens vers les activités ouvertes à l'utilisateur, notamment :
 
  (3) Le mode "bac à sable".
  (4) Le mode "jeu".
  (5) Une page de gestion des options.
  
Un clic sur un de ces liens permettra à l'utilisateur de quitter la page d'accueil et de se rendre sur l'activité correspondante.
 
3) Bac à sable :
 
Cette activité est la partie centrale et indispensable du programme. Elle consiste à présenter à l'utilisateur 
 
  (a) une "boite à outils" contenant des circuits, des portes logiques, des entrées et sorties.
  (b) un espace de travail occupant la majeure partie de l'écran, dans lequel il peut ajouter et relier entre eux les objets de la boite à outil afin de créer des circuits logiques.
  (c) une zone permettant d'agir sur l'objet actuellement sélectionné pour en modifier les caractéristiques, par exemple le nombre d'entrées pour une porte ET.
  (d) une interface permettant la simulation du circuit logique créé par l'utilisateur, en choisissant les valeurs en entrée, et en lisant les valeurs en sortie.
 
  a) La boite à outil est un composant visuel (voir schéma) dans lequel les portes logiques sont représentées par leur représentation schématique usuelle (le triangle du NOT, le demi-ovale du AND, etc...). Cette boite à outil peut aussi contenir les circuits préalablement sauvegardés par l'utilisateur, afin de pouvoir les réutiliser. 
  
  Les outils présent à minima sont les portes basiques : ET, OU, NON-ET, NON-OU, NON, OU EXCLUSIF.
  
  [optionnel] Fournir plus d'outils, en particulier les flips-flops, mux et demux. Bien que l'utilisateur puisse les créer à l'aide du programme lui même, la performance d'outils intégrés sera supérieure à celle d'outils simulés.
    
  b) Par un mécanisme de sélection à déterminer, l'utilisateur place des outils dans l'espace de travail, c'est à dire qu'une copie de l'image représentant cet outil est à présent dans l'espace de travail.
  Elle est repositionnable. On peut aussi l'oter de l'espace de travail si c'était une erreur.
  
  Il peut alors lier les entrées et sorties de chaque outil à celles d'autres outils. Une représentation visuelle de ce lien apparaît à l'écran sous la forme de chemins formés de segments de droites et 
  
  [optionnel] évitant autant que possible de recouper d'autres éléments présents dans l'espace de travail. 
  
  À titre d'exemple à minima, l'utilisateur place deux entrées dans l'espace de travail, une porte ET, et une sortie. Il peut ensuite relier les deux entrées aux entrées de la porte ET, et la sortie de cette porte à la sortie. Des traits apparaissent, matérialisant ces liaisons.
  
  c) Cette zone permet en particulier de spécifier le nombre d'entrées d'un outil. Si l'on souhaite un ET entre quatre entrées, il sera plus propre de placer une porte ET à quatre entrées que trois portes ET à deux entrées.
  
  Cette zone permet aussi de spécifier la valeur 0 ou 1 présente dans une entrée.
  
  [optionnel] un bref examen des logiciels du marché (notamment logisim) montre que de nombreuses possibilités existent. En fonction du temps disponible, une évolution est possible.
  
  d) Cette interface pourrait soit faire partie de l'espace de travail, par exemple en juxtaposant aux entrées et sorties leur valeur, soit faire l'objet d'une zone séparée.
  Il reste à déterminer ce qui serait le plus lisible.
  
4) Le mode ludique :
 
  Il reprend tous les éléments du mode bac à sable, à la différence suivante : l'utilisateur n'a pas accès à tous les outils, mais juste aux outils nécéssaires à réaliser le challenge proposé par le jeu.
  
  S'y ajoute une interface de dialogue, par exemple sous la forme de popup.
